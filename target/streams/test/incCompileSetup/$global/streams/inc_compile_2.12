format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/silva/war/permuted-multiples/target/scala-2.12/test-classes
compile options:
0 items
javac options:
0 items
compiler version:
1 items
0 -> 2.12.2
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> /Users/silva/war/permuted-multiples/target/scala-2.12/test-classes/application/PermutedMultiplesSpec.class
binary dependencies:
3 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> /Users/silva/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> /Users/silva/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> /Users/silva/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> application.PermutedMultiples
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> application.PermutedMultiplesSpec
used names:
43 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> $org_scalatest_assert_macro_expr
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> $org_scalatest_assert_macro_left
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> <byname>
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> <init>
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Any
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Assertion
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> AssertionsHelper
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Bool
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Boolean
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> FlatSpec
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> InAndIgnoreMethods
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Int
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Matchers
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Nothing
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> PermutedMultiples
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> PermutedMultiplesSpec
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Position
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Predef
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Prettifier
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> ResultOfStringPassedToVerb
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> String
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> StringShouldWrapper
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> StringVerbStringInvocation
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> Unit
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> application
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> assertionsHelper
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> assume
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> convertToInAndIgnoreMethods
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> convertToStringShouldWrapper
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> default
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> here
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> in
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> isInstanceOf
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> isInstanceOfMacroBool
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> macroAssume
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> org
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> package
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> permutedMultiples
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> scalactic
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> scalatest
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> shorthandTestRegistrationFunction
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> should
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> source
product stamps:
1 items
/Users/silva/war/permuted-multiples/target/scala-2.12/test-classes/application/PermutedMultiplesSpec.class -> lastModified(1492945271000)
source stamps:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> hash(01ecd6f2aaca8c354c582b15fcb96bbde6cf0d78)
binary stamps:
3 items
/Users/silva/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar -> lastModified(1492071552000)
/Users/silva/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> lastModified(1478757013000)
/Users/silva/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> lastModified(1478757171000)
class names:
3 items
/Users/silva/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.2.jar -> scala.Int
/Users/silva/.ivy2/cache/org.scalactic/scalactic_2.12/bundles/scalactic_2.12-3.0.1.jar -> org.scalactic.Bool$
/Users/silva/.ivy2/cache/org.scalatest/scalatest_2.12/bundles/scalatest_2.12-3.0.1.jar -> org.scalatest.FlatSpec
internal apis:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> 

external apis:
1 items
application.PermutedMultiples -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwm+3nKAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwkp+z13QABm5vdGlmeXNxAH4ADDIEHdp0AAR3YWl0c3EAfgAMrkXhPHQADSRhc0luc3RhbmNlT2ZzcQB+AAy6dj6ldAAGZXF1YWxzc3EAfgAM3rMDmHQADGFzSW5zdGFuY2VPZnNxAH4ADIXjgjR0AAxzeW5jaHJvbml6ZWRzcQB+AAw1KPKZdAANJGlzSW5zdGFuY2VPZnNxAH4ADAOrpP10ABFQZXJtdXRlZE11bHRpcGxlc3NxAH4ADHG+0vd0AAlub3RpZnlBbGxzcQB+AAwdvoI5dAAMaXNJbnN0YW5jZU9mc3EAfgAMn1LyBHQABjxpbml0PnNxAH4ADL4esYJ0AAI9PXNxAH4ADCGzFEx0AAVjbG9uZXNxAH4ADNhCKmd0AAh0b1N0cmluZ3NxAH4ADLuKFQF0AAIhPXNxAH4ADCZlnaJ0AAhnZXRDbGFzc3NxAH4ADBi2qnZ0ABtQZXJtdXRlZE11bHRpcGxlc0RlZmluaXRpb25zcQB+AAy2JEwtdAACbmVzcQB+AAwwlWikdAACZXFzcQB+AAziePoNdAACIyNzcQB+AAw3dIXwdAAIZmluYWxpemVzcQB+AAxaI2EYdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAACc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAdYXBwbGljYXRpb24uUGVybXV0ZWRNdWx0aXBsZXN1cgAaW0x4c2J0aS5hcGkuVHlwZVBhcmFtZXRlcjvZbSYPKJ3ytgIAAHhwAAAAAH5yABh4c2J0aS5hcGkuRGVmaW5pdGlvblR5cGUAAAAAAAAAABIAAHhyAA5qYXZhLmxhbmcuRW51bQAAAAAAAAAAEgAAeHB0AAhDbGFzc0RlZnVyABNbTGphdmEubGFuZy5TdHJpbmc7rdJW5+kde0cCAAB4cAAAAABzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4AW3NyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgBDTAAJaW5oZXJpdGVkcQB+AENMAAdwYXJlbnRzcQB+AEN4cQB+AGBzcQB+AFt1cQB+AD4AAAAAc3EAfgBbdXEAfgA+AAAAAHNxAH4AW3VyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAADc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgANTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4AX3QAG1Blcm11dGVkTXVsdGlwbGVzRGVmaW5pdGlvbnNyABN4c2J0aS5hcGkuU2luZ2xldG9u/Kdf+M9W5EYCAAFMAARwYXRodAAQTHhzYnRpL2FwaS9QYXRoO3hxAH4AX3NyAA54c2J0aS5hcGkuUGF0aJs9XAjOpSeEAgABWwAKY29tcG9uZW50c3QAGltMeHNidGkvYXBpL1BhdGhDb21wb25lbnQ7eHB1cgAaW0x4c2J0aS5hcGkuUGF0aENvbXBvbmVudDtD2gl0LWcWdAIAAHhwAAAAAnNyAAx4c2J0aS5hcGkuSWSYMmyLN1PEQAIAAUwAAmlkcQB+AA14cgAXeHNidGkuYXBpLlBhdGhDb21wb25lbnRfmiJbLoafvAIAAHhwdAALYXBwbGljYXRpb25zcgAOeHNidGkuYXBpLlRoaXPbCe2mzFpAXAIAAHhxAH4AeXNxAH4AbHQABk9iamVjdHNxAH4AcHNxAH4Ac3VxAH4AdgAAAANzcQB+AHh0AARqYXZhc3EAfgB4dAAEbGFuZ3EAfgB9c3EAfgBsdAADQW55c3EAfgBwc3EAfgBzdXEAfgB2AAAAAnNxAH4AeHQABXNjYWxhcQB+AH1zcQB+AEBxAH4ATXVxAH4ATgAAAABzcQB+AFABdAAnYXBwbGljYXRpb24uUGVybXV0ZWRNdWx0aXBsZXNEZWZpbml0aW9udXEAfgBTAAAAAH5xAH4AVXQABVRyYWl0dXEAfgBZAAAAAHNxAH4AW3EAfgBhc3EAfgBbc3EAfgBjc3EAfgBbdXEAfgA+AAAAAHNxAH4AW3VxAH4APgAAAABzcQB+AFt1cQB+AGoAAAACc3EAfgBscQB+AH9zcQB+AHBzcQB+AHN1cQB+AHYAAAADc3EAfgB4cQB+AIRzcQB+AHhxAH4AhnEAfgB9c3EAfgBscQB+AIhzcQB+AHBzcQB+AHN1cQB+AHYAAAACc3EAfgB4cQB+AI1xAH4AfXVyABRbTHhzYnRpLmFwaS5QYWNrYWdlO1sTGTdwpyehAgAAeHAAAAABc3IAEXhzYnRpLmFwaS5QYWNrYWdlflmP9q7OOVgCAAFMAARuYW1lcQB+AA14cHQAC2FwcGxpY2F0aW9uc3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAFbmnjDCnVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AD0vVXNlcnMvc2lsdmEvd2FyL3Blcm11dGVkLW11bHRpcGxlcy90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUUcYhYMFm4LaniEiA8Cs3UbX1jjw=
source infos:
1 items
/Users/silva/war/permuted-multiples/src/test/scala/application/PermutedMultiplesSpec.scala -> 
AAAAAAAAAAA=
compilations:
2 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW5p3+QJ1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQi9Vc2Vycy9zaWx2YS93YXIvcGVybXV0ZWQtbXVsdGlwbGVzL3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
1 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABW5p437Z1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAQi9Vc2Vycy9zaWx2YS93YXIvcGVybXV0ZWQtbXVsdGlwbGVzL3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
